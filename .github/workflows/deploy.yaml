name: Deploy resources on cloud provider

on:
  workflow_dispatch:
    inputs:
      cloud:
        description: 'A supported cloud provider our resources will be deployed on'
        required: true
        default: 'gcp-terraform'
        type: choice
        options:
          - azure-ps1
          - azure-bicep
          - azure-ansible
          - azure-terraform
          - aws-terraform
          - aws-cloudformation
          - digitalocean-terraform
          - digitalocean-ansible
          - gcp-terraform

env:
  DOCKER_HUB_USER: ${{ vars.DOCKER_HUB_USER }}
  DOCKER_IMAGE_NAME: chatbot-mediassist

jobs:
  deploy-on-gcp-terraform:
    if: inputs.cloud == 'gcp-terraform'
    name: CD Release on GCP (Terraform)
    runs-on: ubuntu-latest
    environment: development

    defaults:
      run:
        working-directory: cloud/gcp/terraform

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Authenticate with service account key
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup terraform variables
        id: vars
        run: |-
          cat > terraform.tfvars <<EOF
          PROJECT_ID="${{ vars.GCP_PROJECT }}" 
          EOF

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -input=false -auto-approve tfplan

  deploy-on-azure-ps1:
    if: inputs.cloud == 'azure-ps1'
    name: CD Release on Azure (PS1)
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in via Az module
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Run Azure PowerShell for deployment
        uses: azure/powershell@v1
        with:
          inlineScript: ./cloud/azure/ps1/deploy.ps1
          azPSVersion: "latest"
